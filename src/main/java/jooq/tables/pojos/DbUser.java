/*
 * This file is generated by jOOQ.
 */
package jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import jooq.tables.interfaces.IDbUser;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbUser implements VertxPojo, IDbUser {

    private static final long serialVersionUID = 1136364936;

    private String  username;
    private String  password;
    private String  passwordSalt;
    private Integer version;

    public DbUser() {}

    public DbUser(IDbUser value) {
        this.username = value.getUsername();
        this.password = value.getPassword();
        this.passwordSalt = value.getPasswordSalt();
        this.version = value.getVersion();
    }

    public DbUser(
        String  username,
        String  password,
        String  passwordSalt,
        Integer version
    ) {
        this.username = username;
        this.password = password;
        this.passwordSalt = passwordSalt;
        this.version = version;
    }

    public DbUser(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public String getUsername() {
        return this.username;
    }

    @Override
    public DbUser setUsername(String username) {
        this.username = username;
        return this;
    }

    @Override
    public String getPassword() {
        return this.password;
    }

    @Override
    public DbUser setPassword(String password) {
        this.password = password;
        return this;
    }

    @Override
    public String getPasswordSalt() {
        return this.passwordSalt;
    }

    @Override
    public DbUser setPasswordSalt(String passwordSalt) {
        this.passwordSalt = passwordSalt;
        return this;
    }

    @Override
    public Integer getVersion() {
        return this.version;
    }

    @Override
    public DbUser setVersion(Integer version) {
        this.version = version;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DbUser (");

        sb.append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(passwordSalt);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDbUser from) {
        setUsername(from.getUsername());
        setPassword(from.getPassword());
        setPasswordSalt(from.getPasswordSalt());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IDbUser> E into(E into) {
        into.from(this);
        return into;
    }
}
