/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.OffsetDateTime;

import jooq.tables.DbRole;
import jooq.tables.interfaces.DbIRole;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbRoleRecord extends UpdatableRecordImpl<DbRoleRecord> implements VertxPojo, Record3<String, OffsetDateTime, OffsetDateTime>, DbIRole {

    private static final long serialVersionUID = -549891215;

    /**
     * Setter for <code>public.role.id</code>.
     */
    @Override
    public DbRoleRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.role.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.role.last_modification_time</code>.
     */
    @Override
    public DbRoleRecord setLastModificationTime(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.role.last_modification_time</code>.
     */
    @Override
    public OffsetDateTime getLastModificationTime() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.role.creation_time</code>.
     */
    @Override
    public DbRoleRecord setCreationTime(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.role.creation_time</code>.
     */
    @Override
    public OffsetDateTime getCreationTime() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DbRole.ROLE.ID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return DbRole.ROLE.LAST_MODIFICATION_TIME;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return DbRole.ROLE.CREATION_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getLastModificationTime();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreationTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getLastModificationTime();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreationTime();
    }

    @Override
    public DbRoleRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public DbRoleRecord value2(OffsetDateTime value) {
        setLastModificationTime(value);
        return this;
    }

    @Override
    public DbRoleRecord value3(OffsetDateTime value) {
        setCreationTime(value);
        return this;
    }

    @Override
    public DbRoleRecord values(String value1, OffsetDateTime value2, OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(DbIRole from) {
        setId(from.getId());
        setLastModificationTime(from.getLastModificationTime());
        setCreationTime(from.getCreationTime());
    }

    @Override
    public <E extends DbIRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbRoleRecord
     */
    public DbRoleRecord() {
        super(DbRole.ROLE);
    }

    /**
     * Create a detached, initialised DbRoleRecord
     */
    public DbRoleRecord(String id, OffsetDateTime lastModificationTime, OffsetDateTime creationTime) {
        super(DbRole.ROLE);

        set(0, id);
        set(1, lastModificationTime);
        set(2, creationTime);
    }

    public DbRoleRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
