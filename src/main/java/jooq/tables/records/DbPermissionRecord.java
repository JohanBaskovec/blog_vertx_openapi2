/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import jooq.tables.DbPermission;
import jooq.tables.interfaces.DbIPermission;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbPermissionRecord extends UpdatableRecordImpl<DbPermissionRecord> implements VertxPojo, Record1<String>, DbIPermission {

    private static final long serialVersionUID = -1981053521;

    /**
     * Setter for <code>public.permission.id</code>.
     */
    @Override
    public DbPermissionRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.permission.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<String> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DbPermission.PERMISSION.ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public DbPermissionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public DbPermissionRecord values(String value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(DbIPermission from) {
        setId(from.getId());
    }

    @Override
    public <E extends DbIPermission> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbPermissionRecord
     */
    public DbPermissionRecord() {
        super(DbPermission.PERMISSION);
    }

    /**
     * Create a detached, initialised DbPermissionRecord
     */
    public DbPermissionRecord(String id) {
        super(DbPermission.PERMISSION);

        set(0, id);
    }

    public DbPermissionRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
