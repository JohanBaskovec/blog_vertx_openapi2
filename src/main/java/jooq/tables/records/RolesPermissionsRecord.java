/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import jooq.tables.RolesPermissions;
import jooq.tables.interfaces.IRolesPermissions;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesPermissionsRecord extends TableRecordImpl<RolesPermissionsRecord> implements VertxPojo, Record2<String, String>, IRolesPermissions {

    private static final long serialVersionUID = -1148531749;

    /**
     * Setter for <code>public.roles_permissions.role_id</code>.
     */
    @Override
    public RolesPermissionsRecord setRoleId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.roles_permissions.role_id</code>.
     */
    @Override
    public String getRoleId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.roles_permissions.permission_id</code>.
     */
    @Override
    public RolesPermissionsRecord setPermissionId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.roles_permissions.permission_id</code>.
     */
    @Override
    public String getPermissionId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RolesPermissions.ROLES_PERMISSIONS.ROLE_ID;
    }

    @Override
    public Field<String> field2() {
        return RolesPermissions.ROLES_PERMISSIONS.PERMISSION_ID;
    }

    @Override
    public String component1() {
        return getRoleId();
    }

    @Override
    public String component2() {
        return getPermissionId();
    }

    @Override
    public String value1() {
        return getRoleId();
    }

    @Override
    public String value2() {
        return getPermissionId();
    }

    @Override
    public RolesPermissionsRecord value1(String value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RolesPermissionsRecord value2(String value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public RolesPermissionsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRolesPermissions from) {
        setRoleId(from.getRoleId());
        setPermissionId(from.getPermissionId());
    }

    @Override
    public <E extends IRolesPermissions> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolesPermissionsRecord
     */
    public RolesPermissionsRecord() {
        super(RolesPermissions.ROLES_PERMISSIONS);
    }

    /**
     * Create a detached, initialised RolesPermissionsRecord
     */
    public RolesPermissionsRecord(String roleId, String permissionId) {
        super(RolesPermissions.ROLES_PERMISSIONS);

        set(0, roleId);
        set(1, permissionId);
    }

    public RolesPermissionsRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
