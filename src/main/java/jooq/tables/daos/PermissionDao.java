/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import jooq.tables.Permission;
import jooq.tables.records.PermissionRecord;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.reactivepg.ReactiveClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionDao extends AbstractReactiveVertxDAO<PermissionRecord, jooq.tables.pojos.Permission, String, Future<List<jooq.tables.pojos.Permission>>, Future<jooq.tables.pojos.Permission>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<PermissionRecord,jooq.tables.pojos.Permission,String> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the POSTGREs types.
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public PermissionDao(Configuration configuration, io.vertx.sqlclient.SqlClient delegate) {
        super(Permission.PERMISSION, jooq.tables.pojos.Permission.class, new ReactiveClassicQueryExecutor<PermissionRecord,jooq.tables.pojos.Permission,String>(configuration,delegate,jooq.tables.mappers.RowMappers.getPermissionMapper()));
    }

    @Override
    protected String getId(jooq.tables.pojos.Permission object) {
        return object.getId();
    }

    @Override
    public ReactiveClassicQueryExecutor<PermissionRecord,jooq.tables.pojos.Permission,String> queryExecutor(){
        return (ReactiveClassicQueryExecutor<PermissionRecord,jooq.tables.pojos.Permission,String>) super.queryExecutor();
    }
}
